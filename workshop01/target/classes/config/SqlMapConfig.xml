<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
MySQL의 핵심이 되는 설정 무서
:
DB Acess하는 모든 요소를 가지고 있기 때문
 -->
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	
	<!-- 
	1. dbconn.properties Wiring(파일과 파일이 연결됨)
	DB 서버 정보를 가지고 있는 상수값
	 -->
	<properties resource="config/dbconn.properties"/>
	
	<!-- NULL값을 허용하는 옵션 지정 : Oracle인 경우 반드시 지정해야 함 -->
	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
		<!-- NULL은 반드시 대문자로 작성 (소문자로 작성하면 오류 발생) -->
		<!-- 
		select 시, 컬럼명을 자동으로 카멜 케이스로 인식하도록 함...하지만 너무 믿으면 안됨.......
		컬럼명과 필드명이 아예 다른 경우가 훨씬 많기 때문
		 -->
	</settings>
	
	<!-- 2. VO 객체 Wiring -->
	<typeAliases>
		<typeAlias type="com.service.spring.domain.MyProduct" alias="myProduct"/>
	</typeAliases>
	
	<!-- 3. JDBC 환경 구축 :: DataSource -->
	<!-- 드라이버매니저 방식 - MyBatis Framework 단위테스트용 -->
	<environments default="aa">
		<environment id="aa">
			<transactionManager type="JDBC"/>
			<dataSource type="UNPOOLED">
				<property name="driver" value="${jdbc.mysql.driver}"/>
				<property name="url" value="${jdbc.mysql.url}"/>
				<property name="username" value="${jdbc.mysql.username}"/>
				<property name="password" value="${jdbc.mysql.password}"/>
			</dataSource>
		</environment>
	</environments>

	<!-- 4. sql 구문의 모듈화 -->
	<!-- 
	mapper는 여러개 올 수 있음
	 -->
	<mappers>
		<mapper resource="mapper/mybatis-myproduct-mapping.xml"/>
	</mappers>
</configuration>